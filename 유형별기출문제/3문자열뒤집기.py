"""
백준 1439번 문자열 뒤집기 ------------------ 문제 자체가 의도전달이  어려움 
https://www.acmicpc.net/problem/1439

문제
다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있다. 
다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 한다. 
다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. *********** 문장 잘 읽기 
뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다.

예를 들어 S=0001100 일 때,

전체를 뒤집으면 1110011이 된다.
4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 2번 만에 모두 같은 숫자로 만들 수 있다.
하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면 한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.

문자열 S가 주어졌을 때, 다솜이가 해야하는 행동의 최소 횟수를 출력하시오.

입력
첫째 줄에 문자열 S가 주어진다. S의 길이는 100만보다 작다.

출력
첫째 줄에 다솜이가 해야하는 행동의 최소 횟수를 출력한다.

# 예제 입력 
0001100

# 예제 출력
1 

## 설명 해석 알될때 참고 
https://bgspro.tistory.com/42
"""
# 문제 자체가 설명도 이상함 
# import sys 
# S = str(sys.stdin.readline().strip())
# cnt = 0 

# if S.count('0') >= S.count('1') :
#     S = S.replace('1','0')
# else : 
#     S = S.replace('0','1')
# cnt +=1 
# print(cnt)

## 해설 답안 -- 그룹 단위로 변경 , replace()는 사용하지 않음 
## 문제 내용에 'S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것' 이라는 말이 포인트 인듯 

data = input() 
count0 = 0  # 전부 0으로 바꾸는 경우 
count1 = 0  # 전부 1로 바꾸는 경우 

# 첫번째 원소에 대해서 처리 
if data[0] == '1':
    count0 += 1 
else : 
    count1 += 1 

# 두번째 원소부터 모든 원소를 확인하며 
for i in range(len(data)-1):
    if data[i] != data[i+1]:
        # 다음 수에서 1로 바뀌는 경우 
        if data[i+1] == '1':
            count0 += 1 
        else : 
            count1 += 1
print(f'count0 = {count0} , count1={count1}')
print(min(count0, count1))