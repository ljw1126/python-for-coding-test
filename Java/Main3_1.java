package Java;
/*
  [거스름돈 문제]
  문제)
    당신은 음식점의 계산을 도와주는 점원입니다. 
    카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다.
    손님에게 거슬러 주어야 할 돈이 N원일 때 거슬러 주어야 할 동전의 최소 개수를 구하세요.
    단, 거슬러 줘야 할 돈 N은 항상 10의 배수입니다. 


    - 최적의 해를 빠르게 구하기 위해서는 '가장 큰 화폐 단위부터' 돈을 거슬러주면 됨
    - N원을 거슬러 줘야 할 때, 가장 먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러 줍니다. 
    > 이후에 100원, 50원, 10원짜리 동전을 차례대로 거슬러 줄 수 있을 만큼 거슬러 주면 됩니다. 
    - N = 1,260 일때의 예시를 확인해 봅니다. 
*/
public class Main3_1 {
    public static void main(String[] args) {
        int n = 1260;
        int cnt = 0;

        int[] coinTypes = { 500, 100, 50, 10 }; // {} 객체가 아니라 배열이네?
        
        for(int i = 0 ; i < 4 ; i++){
            int coin = coinTypes[i];
            cnt += n / coin;    // 몫 
            n %= coin;      //나머지
        }
    
        System.out.print(cnt);
    }
}
