
"""
15596 번 정수 N개의 합 
문제
정수 n개가 주어졌을 때, n개의 합을 구하는 함수를 작성하시오.

작성해야 하는 함수는 다음과 같다.

C, C11, C (Clang), C11 (Clang): long long sum(int *a, int n);
a: 합을 구해야 하는 정수 n개가 저장되어 있는 배열 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
n: 합을 구해야 하는 정수의 개수
리턴값: a에 포함되어 있는 정수 n개의 합
C++, C++11, C++14, C++17, C++ (Clang), C++11 (Clang), C++14 (Clang), C++17 (Clang): long long sum(std::vector<int> &a);
a: 합을 구해야 하는 정수 n개가 저장되어 있는 배열 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
리턴값: a에 포함되어 있는 정수 n개의 합
Python 2, Python 3, PyPy, PyPy3: def solve(a: list) -> int
a: 합을 구해야 하는 정수 n개가 저장되어 있는 리스트 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
리턴값: a에 포함되어 있는 정수 n개의 합 (정수)
Java: long sum(int[] a); (클래스 이름: Test)
a: 합을 구해야 하는 정수 n개가 저장되어 있는 배열 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
리턴값: a에 포함되어 있는 정수 n개의 합
Go: sum(a []int) int
a: 합을 구해야 하는 정수 n개가 저장되어 있는 배열 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
리턴값: a에 포함되어 있는 정수 n개의 합
"""
## def 부분만 제출하면 됨 
# n = list(map(int,input().split()))
# def sovle(a:list) -> int:
#     return sum(a)
# print(sovle(n))

"""
4673번 셀프 넘버 ----------- 문제가 좀 이해가 안 되었음 , set() 집합의 특징과 sorted()활용
문제
셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.

양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 

예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다.

33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...

n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다. 

생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97

10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.
"""

## 몰라서 찾아봄 
# set() , sorted() 함수 활용 
# 6강_사전과집합.txt 참고 // 차집합..
# 리트스.sort()와 sorted(리스트)차이 >> https://blockdmask.tistory.com/466

# natural_num = set(range(1,10001))  # {1,2,3,4,...}
# generated_num = set()

# for i in range(1,10001):
#     for j in str(i):
#         i += int(j)
#     generated_num.add(i)

# self_num = sorted(natural_num - generated_num)
# for k in self_num:
#     print(k)


"""
1065번 한수 ---------------------- 수학적 개념 자체부터가 이해가 안되
문제
어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오. 

입력
첫째 줄에 1,000보다 작거나 같은 자연수 N이 주어진다.

출력
첫째 줄에 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력한다.

https://wook-2124.tistory.com/254?category=943191
https://m.blog.naver.com/PostView.nhn?isHttpsRedirect=true&blogId=occidere&logNo=220790000403

# 참고 정리 
    - 한수란 ? 각 자리수들이 등차수열을 이루는 수 ( 공차가 같아야 함 )
      -> 1자리수, 2자리 수 들은 모두 한 수가 됨   
         >> 1자리는 비교할 게 없어서 한수 
         >> 2자리는 구할 수 있는 공차가 1개 밖에 없어서 한수 

      110
      1-1 = 1-0    // 공차(공통적으로 나타나는 차) 틀림 , 공차가 2개 이상     
"""

n = int(input())
hansu = 0

for i in range(1,n+1):
    if ( i < 100 ):
         hansu +=1
    else:
        array = list(map(int,str(i)))
        if array[0]-array[1] == array[1]-array[2]:
            hansu += 1

print(hansu)